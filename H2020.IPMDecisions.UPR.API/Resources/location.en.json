{
  "data_share": {
    "user_not_registered": "User is not registered in the system.",
    "pending_change_error": "You can not update a pending request. Please use the 'reply' end point to accept/decline request.",
    "back_to_pending": "You can not change a request back to pending.",
    "no_farms_error": "User do not have any farms in the system.",
    "existing_request": "You have already requested data to this user.",
    "request_error": "Request do not belong to the user.",
    "email_error": "Request created but error sending email.",
    "user_requesting_no_profile": "User requesting data share do not have a profile in the system.",
    "not_existing_request": "Request do not exist in the system or already accepted/declined.",
    "own_request_error": "User can not request its own data.",
    "user_without_profile": "User do not have a profile in the system.",
    "declined_request": "The user has declined access to the data.",
    "farms_ownership_error": "Farms do not belong to the user.",
    "wrong_method": "The method is for accepting or declining requests."
  },
  "farm": {
    "owner_error": "You are not the owner of this farm, so process can not be completed."
  },
  "dss": {
    "existing_combination": "Field already has crop ({0}), pest ({1}), and DSS ({2}) combination.",
    "warning_header": "One or more crop, pest & DSS combinations already exists. Please check response body for more information.",
    "warnings": "Please fix the following error(s) before saving:",
    "model_missing_metadata": "The DSS with ID '{0}' and version '{1}', do not have any model with ID '{2}' and version '{3}' on the DSS microservice.",
    "field_eppo_code": "Field with ID {0} only accepts '{1}' crop EPPO code",
    "dss_missing_metadata": "DSS with ID '{0}' and version '{1}' do not exist on the DSS microservice.",
    "duplicated": "Duplicated combination of Crop ({0}), Pest ({1}), DSS ({2}), Model ({3}) & DSS Model version ({4}) on a field."
  },
  "dss_process": {
    "dss_format_error": "Message error from DSS do not follow IPM Decisions standards, so unfortunately we can not provide more information.",
    "dss_error": "Error running the DSS - {0}",
    "dss_information": "Error getting DSS information from microservice.",
    "system_ready_error": "Error running the DSS - System not ready.",
    "dss_no_endpoint": "End point not available to run DSS.",
    "weather_data_error": "{0} - Error with Weather Data"
  },
  "weather": {
    "validation_error": "Weather data received failed the IPM Decisions Weather validation schema. This might be because the weather data source selected do not accept weather parameters required by the DSS: {0}",
    "next_season_fixed": "",
    "missing_weather_service": "No Weather Data Sources or Weather Stations associated to the farm",
    "next_season": "DSS default start date to get and use weather data is {0}. Please wait until this date or change the DSS parameters to start using earlier weather data.",
    "internal_error": "Weather service is busy and can't process your request. The platform will try again to get the weather data in 5 minutes. If the error persist, please contact us.",
    "missing_service": "Weather service with ID '{0}' do not exist on the weather microservice.",
    "no_json_format": "Weather data received in not in a JSON format."
  },
  "shared": {
    "missing_payload": "Data missing on payload.",
    "wrong_media_type": "Wrong media type on the request.",
    "missing_user_profile": "Please create a `User Profile` first.",
    "wrong_fields": "Wrong fields entered or missing 'id' field on the request.",
    "wrong_order_by": "Wrong OrderBy entered on the request.",
    "missing_default_forecast": "Database do not contain default weather forecast value.",
    "missing_default_historical": "Database do not contain default weather historical value."
  }
}