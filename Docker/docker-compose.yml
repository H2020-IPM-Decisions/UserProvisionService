version: '3.4'

services:
  upr.db:
    image: postgres:12.2
    container_name: upr-postgres
    environment:
      # change default username/password 
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: H2020.IPMDecisions.UPR
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes: 
      - postgres_upr_volume:/var/lib/postgresql/data
      # Change username and password before loading the data
      - ./UPR_Postgresql_Init_Script/1.createUser.sql :/docker-entrypoint-initdb.d/1.createUser.sql
      - ./UPR_Postgresql_Init_Script/2.dbBackup.sql :/docker-entrypoint-initdb.d/2.dbBackup.sql
    networks:
      - dockerapi-dev
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - upr.db
    container_name: pgadmin4
    restart: always
    ports:
      - "5555:80"
    environment:
      # change admin username/password
      PGADMIN_DEFAULT_EMAIL: admin@test.com
      PGADMIN_DEFAULT_PASSWORD: admin
  upr.api:
    depends_on:
      - upr.db
    image: ipmdecisions/userprovisionservice:develop
    container_name: upr-api
    hostname: upr.api
    restart: always
    build:
      context: ../
      dockerfile: ./Docker/Dockerfile
    ports:
      - 5006:5006
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5006
      # The following db username and password are create in file in UPR_Postgresql_Init_Script/1.createUser.sql
      - ConnectionStrings:MyPostgreSQLConnection=Host=upr.db;Port=5432;Database=H2020.IPMDecisions.UPR;Username=upr_user;Password=xxxxxx;
      - JwtSettings:SecretKey=AddYourSecretKey
      - JwtSettings:IssuerServerUrl=AddYourServer
      - JwtSettings:ValidAudiencesUrls=https://testclient.com
      - AllowedHosts=*
    networks:
      - dockerapi-dev
networks:
  dockerapi-dev:
    driver: bridge 
volumes:
   postgres_upr_volume: